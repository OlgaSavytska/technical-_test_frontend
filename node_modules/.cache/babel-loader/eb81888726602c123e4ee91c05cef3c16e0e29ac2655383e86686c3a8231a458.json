{"ast":null,"code":"var createLayout = require('layout-bmfont-text');\nvar inherits = require('inherits');\nvar createIndices = require('quad-indices');\nvar vertices = require('./lib/vertices');\nvar utils = require('./lib/utils');\nvar Base = THREE.BufferGeometry;\nmodule.exports = function createTextGeometry(opt) {\n  return new TextGeometry(opt);\n};\nfunction TextGeometry(opt) {\n  Base.call(this);\n  if (typeof opt === 'string') {\n    opt = {\n      text: opt\n    };\n  }\n\n  // use these as default values for any subsequent\n  // calls to update()\n  this._opt = Object.assign({}, opt);\n\n  // also do an initial setup...\n  if (opt) this.update(opt);\n}\ninherits(TextGeometry, Base);\nTextGeometry.prototype.update = function (opt) {\n  if (typeof opt === 'string') {\n    opt = {\n      text: opt\n    };\n  }\n\n  // use constructor defaults\n  opt = Object.assign({}, this._opt, opt);\n  if (!opt.font) {\n    throw new TypeError('must specify a { font } in options');\n  }\n  this.layout = createLayout(opt);\n\n  // get vec2 texcoords\n  var flipY = opt.flipY !== false;\n\n  // the desired BMFont data\n  var font = opt.font;\n\n  // determine texture size from font file\n  var texWidth = font.common.scaleW;\n  var texHeight = font.common.scaleH;\n\n  // get visible glyphs\n  var glyphs = this.layout.glyphs.filter(function (glyph) {\n    var bitmap = glyph.data;\n    return bitmap.width * bitmap.height > 0;\n  });\n\n  // provide visible glyphs for convenience\n  this.visibleGlyphs = glyphs;\n\n  // get common vertex data\n  var positions = vertices.positions(glyphs);\n  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY);\n  var indices = createIndices([], {\n    clockwise: true,\n    type: 'uint16',\n    count: glyphs.length\n  });\n\n  // update vertex data\n  this.setIndex(indices);\n  this.setAttribute('position', new THREE.BufferAttribute(positions, 2));\n  this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n\n  // update multipage data\n  if (!opt.multipage && 'page' in this.attributes) {\n    // disable multipage rendering\n    this.removeAttribute('page');\n  } else if (opt.multipage) {\n    // enable multipage rendering\n    var pages = vertices.pages(glyphs);\n    this.setAttribute('page', new THREE.BufferAttribute(pages, 1));\n  }\n};\nTextGeometry.prototype.computeBoundingSphere = function () {\n  if (this.boundingSphere === null) {\n    this.boundingSphere = new THREE.Sphere();\n  }\n  var positions = this.attributes.position.array;\n  var itemSize = this.attributes.position.itemSize;\n  if (!positions || !itemSize || positions.length < 2) {\n    this.boundingSphere.radius = 0;\n    this.boundingSphere.center.set(0, 0, 0);\n    return;\n  }\n  utils.computeSphere(positions, this.boundingSphere);\n  if (isNaN(this.boundingSphere.radius)) {\n    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' + 'Computed radius is NaN. The ' + '\"position\" attribute is likely to have NaN values.');\n  }\n};\nTextGeometry.prototype.computeBoundingBox = function () {\n  if (this.boundingBox === null) {\n    this.boundingBox = new THREE.Box3();\n  }\n  var bbox = this.boundingBox;\n  var positions = this.attributes.position.array;\n  var itemSize = this.attributes.position.itemSize;\n  if (!positions || !itemSize || positions.length < 2) {\n    bbox.makeEmpty();\n    return;\n  }\n  utils.computeBox(positions, bbox);\n};","map":{"version":3,"names":["createLayout","require","inherits","createIndices","vertices","utils","Base","THREE","BufferGeometry","module","exports","createTextGeometry","opt","TextGeometry","call","text","_opt","Object","assign","update","prototype","font","TypeError","layout","flipY","texWidth","common","scaleW","texHeight","scaleH","glyphs","filter","glyph","bitmap","data","width","height","visibleGlyphs","positions","uvs","indices","clockwise","type","count","length","setIndex","setAttribute","BufferAttribute","multipage","attributes","removeAttribute","pages","computeBoundingSphere","boundingSphere","Sphere","position","array","itemSize","radius","center","set","computeSphere","isNaN","console","error","computeBoundingBox","boundingBox","Box3","bbox","makeEmpty","computeBox"],"sources":["/Users/olga/Desktop/parallaxTest/node_modules/three-bmfont-text/index.js"],"sourcesContent":["var createLayout = require('layout-bmfont-text')\nvar inherits = require('inherits')\nvar createIndices = require('quad-indices')\n\nvar vertices = require('./lib/vertices')\nvar utils = require('./lib/utils')\n\nvar Base = THREE.BufferGeometry\n\nmodule.exports = function createTextGeometry (opt) {\n  return new TextGeometry(opt)\n}\n\nfunction TextGeometry (opt) {\n  Base.call(this)\n\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use these as default values for any subsequent\n  // calls to update()\n  this._opt = Object.assign({}, opt)\n\n  // also do an initial setup...\n  if (opt) this.update(opt)\n}\n\ninherits(TextGeometry, Base)\n\nTextGeometry.prototype.update = function (opt) {\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use constructor defaults\n  opt = Object.assign({}, this._opt, opt)\n\n  if (!opt.font) {\n    throw new TypeError('must specify a { font } in options')\n  }\n\n  this.layout = createLayout(opt)\n\n  // get vec2 texcoords\n  var flipY = opt.flipY !== false\n\n  // the desired BMFont data\n  var font = opt.font\n\n  // determine texture size from font file\n  var texWidth = font.common.scaleW\n  var texHeight = font.common.scaleH\n\n  // get visible glyphs\n  var glyphs = this.layout.glyphs.filter(function (glyph) {\n    var bitmap = glyph.data\n    return bitmap.width * bitmap.height > 0\n  })\n\n  // provide visible glyphs for convenience\n  this.visibleGlyphs = glyphs\n\n  // get common vertex data\n  var positions = vertices.positions(glyphs)\n  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n  var indices = createIndices([], {\n    clockwise: true,\n    type: 'uint16',\n    count: glyphs.length\n  })\n\n  // update vertex data\n  this.setIndex(indices)\n  this.setAttribute('position', new THREE.BufferAttribute(positions, 2))\n  this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2))\n\n  // update multipage data\n  if (!opt.multipage && 'page' in this.attributes) {\n    // disable multipage rendering\n    this.removeAttribute('page')\n  } else if (opt.multipage) {\n    // enable multipage rendering\n    var pages = vertices.pages(glyphs)\n    this.setAttribute('page', new THREE.BufferAttribute(pages, 1))\n  }\n}\n\nTextGeometry.prototype.computeBoundingSphere = function () {\n  if (this.boundingSphere === null) {\n    this.boundingSphere = new THREE.Sphere()\n  }\n\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    this.boundingSphere.radius = 0\n    this.boundingSphere.center.set(0, 0, 0)\n    return\n  }\n  utils.computeSphere(positions, this.boundingSphere)\n  if (isNaN(this.boundingSphere.radius)) {\n    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n      'Computed radius is NaN. The ' +\n      '\"position\" attribute is likely to have NaN values.')\n  }\n}\n\nTextGeometry.prototype.computeBoundingBox = function () {\n  if (this.boundingBox === null) {\n    this.boundingBox = new THREE.Box3()\n  }\n\n  var bbox = this.boundingBox\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    bbox.makeEmpty()\n    return\n  }\n  utils.computeBox(positions, bbox)\n}\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAChD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIE,aAAa,GAAGF,OAAO,CAAC,cAAc,CAAC;AAE3C,IAAIG,QAAQ,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAII,KAAK,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAElC,IAAIK,IAAI,GAAGC,KAAK,CAACC,cAAc;AAE/BC,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAAEC,GAAG,EAAE;EACjD,OAAO,IAAIC,YAAY,CAACD,GAAG,CAAC;AAC9B,CAAC;AAED,SAASC,YAAYA,CAAED,GAAG,EAAE;EAC1BN,IAAI,CAACQ,IAAI,CAAC,IAAI,CAAC;EAEf,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAG;MAAEG,IAAI,EAAEH;IAAI,CAAC;EACrB;;EAEA;EACA;EACA,IAAI,CAACI,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,GAAG,CAAC;;EAElC;EACA,IAAIA,GAAG,EAAE,IAAI,CAACO,MAAM,CAACP,GAAG,CAAC;AAC3B;AAEAV,QAAQ,CAACW,YAAY,EAAEP,IAAI,CAAC;AAE5BO,YAAY,CAACO,SAAS,CAACD,MAAM,GAAG,UAAUP,GAAG,EAAE;EAC7C,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAG;MAAEG,IAAI,EAAEH;IAAI,CAAC;EACrB;;EAEA;EACAA,GAAG,GAAGK,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACF,IAAI,EAAEJ,GAAG,CAAC;EAEvC,IAAI,CAACA,GAAG,CAACS,IAAI,EAAE;IACb,MAAM,IAAIC,SAAS,CAAC,oCAAoC,CAAC;EAC3D;EAEA,IAAI,CAACC,MAAM,GAAGvB,YAAY,CAACY,GAAG,CAAC;;EAE/B;EACA,IAAIY,KAAK,GAAGZ,GAAG,CAACY,KAAK,KAAK,KAAK;;EAE/B;EACA,IAAIH,IAAI,GAAGT,GAAG,CAACS,IAAI;;EAEnB;EACA,IAAII,QAAQ,GAAGJ,IAAI,CAACK,MAAM,CAACC,MAAM;EACjC,IAAIC,SAAS,GAAGP,IAAI,CAACK,MAAM,CAACG,MAAM;;EAElC;EACA,IAAIC,MAAM,GAAG,IAAI,CAACP,MAAM,CAACO,MAAM,CAACC,MAAM,CAAC,UAAUC,KAAK,EAAE;IACtD,IAAIC,MAAM,GAAGD,KAAK,CAACE,IAAI;IACvB,OAAOD,MAAM,CAACE,KAAK,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC;EACzC,CAAC,CAAC;;EAEF;EACA,IAAI,CAACC,aAAa,GAAGP,MAAM;;EAE3B;EACA,IAAIQ,SAAS,GAAGlC,QAAQ,CAACkC,SAAS,CAACR,MAAM,CAAC;EAC1C,IAAIS,GAAG,GAAGnC,QAAQ,CAACmC,GAAG,CAACT,MAAM,EAAEL,QAAQ,EAAEG,SAAS,EAAEJ,KAAK,CAAC;EAC1D,IAAIgB,OAAO,GAAGrC,aAAa,CAAC,EAAE,EAAE;IAC9BsC,SAAS,EAAE,IAAI;IACfC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAEb,MAAM,CAACc;EAChB,CAAC,CAAC;;EAEF;EACA,IAAI,CAACC,QAAQ,CAACL,OAAO,CAAC;EACtB,IAAI,CAACM,YAAY,CAAC,UAAU,EAAE,IAAIvC,KAAK,CAACwC,eAAe,CAACT,SAAS,EAAE,CAAC,CAAC,CAAC;EACtE,IAAI,CAACQ,YAAY,CAAC,IAAI,EAAE,IAAIvC,KAAK,CAACwC,eAAe,CAACR,GAAG,EAAE,CAAC,CAAC,CAAC;;EAE1D;EACA,IAAI,CAAC3B,GAAG,CAACoC,SAAS,IAAI,MAAM,IAAI,IAAI,CAACC,UAAU,EAAE;IAC/C;IACA,IAAI,CAACC,eAAe,CAAC,MAAM,CAAC;EAC9B,CAAC,MAAM,IAAItC,GAAG,CAACoC,SAAS,EAAE;IACxB;IACA,IAAIG,KAAK,GAAG/C,QAAQ,CAAC+C,KAAK,CAACrB,MAAM,CAAC;IAClC,IAAI,CAACgB,YAAY,CAAC,MAAM,EAAE,IAAIvC,KAAK,CAACwC,eAAe,CAACI,KAAK,EAAE,CAAC,CAAC,CAAC;EAChE;AACF,CAAC;AAEDtC,YAAY,CAACO,SAAS,CAACgC,qBAAqB,GAAG,YAAY;EACzD,IAAI,IAAI,CAACC,cAAc,KAAK,IAAI,EAAE;IAChC,IAAI,CAACA,cAAc,GAAG,IAAI9C,KAAK,CAAC+C,MAAM,CAAC,CAAC;EAC1C;EAEA,IAAIhB,SAAS,GAAG,IAAI,CAACW,UAAU,CAACM,QAAQ,CAACC,KAAK;EAC9C,IAAIC,QAAQ,GAAG,IAAI,CAACR,UAAU,CAACM,QAAQ,CAACE,QAAQ;EAChD,IAAI,CAACnB,SAAS,IAAI,CAACmB,QAAQ,IAAInB,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;IACnD,IAAI,CAACS,cAAc,CAACK,MAAM,GAAG,CAAC;IAC9B,IAAI,CAACL,cAAc,CAACM,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvC;EACF;EACAvD,KAAK,CAACwD,aAAa,CAACvB,SAAS,EAAE,IAAI,CAACe,cAAc,CAAC;EACnD,IAAIS,KAAK,CAAC,IAAI,CAACT,cAAc,CAACK,MAAM,CAAC,EAAE;IACrCK,OAAO,CAACC,KAAK,CAAC,gDAAgD,GAC5D,8BAA8B,GAC9B,oDAAoD,CAAC;EACzD;AACF,CAAC;AAEDnD,YAAY,CAACO,SAAS,CAAC6C,kBAAkB,GAAG,YAAY;EACtD,IAAI,IAAI,CAACC,WAAW,KAAK,IAAI,EAAE;IAC7B,IAAI,CAACA,WAAW,GAAG,IAAI3D,KAAK,CAAC4D,IAAI,CAAC,CAAC;EACrC;EAEA,IAAIC,IAAI,GAAG,IAAI,CAACF,WAAW;EAC3B,IAAI5B,SAAS,GAAG,IAAI,CAACW,UAAU,CAACM,QAAQ,CAACC,KAAK;EAC9C,IAAIC,QAAQ,GAAG,IAAI,CAACR,UAAU,CAACM,QAAQ,CAACE,QAAQ;EAChD,IAAI,CAACnB,SAAS,IAAI,CAACmB,QAAQ,IAAInB,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;IACnDwB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB;EACF;EACAhE,KAAK,CAACiE,UAAU,CAAChC,SAAS,EAAE8B,IAAI,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}