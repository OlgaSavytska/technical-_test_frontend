{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"quiz-modal\"\n  }, [_c(\"vs-dialog\", {\n    attrs: {\n      width: \"550px\",\n      \"not-center\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"header\",\n      fn: function () {\n        return [_c(\"h4\", {\n          staticClass: \"not-margin\"\n        }, [_vm._v(\" \" + _vm._s(_vm.description.title) + \" \")])];\n      },\n      proxy: true\n    }, {\n      key: \"footer\",\n      fn: function () {\n        return [_c(\"div\", {\n          staticClass: \"con-footer\"\n        }, [_c(\"vs-button\", {\n          attrs: {\n            transparent: \"\"\n          },\n          on: {\n            click: _vm.showCorrectAnswers\n          }\n        }, [_vm._v(\" Show the correct answers. \")]), _c(\"vs-button\", {\n          attrs: {\n            dark: \"\",\n            transparent: \"\"\n          },\n          on: {\n            click: function ($event) {\n              _vm.open = false;\n            }\n          }\n        }, [_vm._v(\" Cancel \")])], 1)];\n      },\n      proxy: true\n    }]),\n    model: {\n      value: _vm.open,\n      callback: function ($$v) {\n        _vm.open = $$v;\n      },\n      expression: \"open\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"con-content\"\n  }, [_c(\"p\", [_vm._v(\" \" + _vm._s(_vm.description.text) + \" \")])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticClass","attrs","width","scopedSlots","_u","key","fn","_v","_s","description","title","proxy","transparent","on","click","showCorrectAnswers","dark","$event","open","model","value","callback","$$v","expression","text","staticRenderFns","_withStripped"],"sources":["/Users/olga/Desktop/parallaxTest/src/components/QuizPageComponents/Modal/QuizModal.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"quiz-modal\" },\n    [\n      _c(\n        \"vs-dialog\",\n        {\n          attrs: { width: \"550px\", \"not-center\": \"\" },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function () {\n                return [\n                  _c(\"h4\", { staticClass: \"not-margin\" }, [\n                    _vm._v(\" \" + _vm._s(_vm.description.title) + \" \"),\n                  ]),\n                ]\n              },\n              proxy: true,\n            },\n            {\n              key: \"footer\",\n              fn: function () {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"con-footer\" },\n                    [\n                      _c(\n                        \"vs-button\",\n                        {\n                          attrs: { transparent: \"\" },\n                          on: { click: _vm.showCorrectAnswers },\n                        },\n                        [_vm._v(\" Show the correct answers. \")]\n                      ),\n                      _c(\n                        \"vs-button\",\n                        {\n                          attrs: { dark: \"\", transparent: \"\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.open = false\n                            },\n                          },\n                        },\n                        [_vm._v(\" Cancel \")]\n                      ),\n                    ],\n                    1\n                  ),\n                ]\n              },\n              proxy: true,\n            },\n          ]),\n          model: {\n            value: _vm.open,\n            callback: function ($$v) {\n              _vm.open = $$v\n            },\n            expression: \"open\",\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"con-content\" }, [\n            _c(\"p\", [_vm._v(\" \" + _vm._s(_vm.description.text) + \" \")]),\n          ]),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CACP,KAAK,EACL;IAAEE,WAAW,EAAE;EAAa,CAAC,EAC7B,CACEF,EAAE,CACA,WAAW,EACX;IACEG,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAE,YAAY,EAAE;IAAG,CAAC;IAC3CC,WAAW,EAAEN,GAAG,CAACO,EAAE,CAAC,CAClB;MACEC,GAAG,EAAE,QAAQ;MACbC,EAAE,EAAE,SAAAA,CAAA,EAAY;QACd,OAAO,CACLR,EAAE,CAAC,IAAI,EAAE;UAAEE,WAAW,EAAE;QAAa,CAAC,EAAE,CACtCH,GAAG,CAACU,EAAE,CAAC,GAAG,GAAGV,GAAG,CAACW,EAAE,CAACX,GAAG,CAACY,WAAW,CAACC,KAAK,CAAC,GAAG,GAAG,CAAC,CAClD,CAAC,CACH;MACH,CAAC;MACDC,KAAK,EAAE;IACT,CAAC,EACD;MACEN,GAAG,EAAE,QAAQ;MACbC,EAAE,EAAE,SAAAA,CAAA,EAAY;QACd,OAAO,CACLR,EAAE,CACA,KAAK,EACL;UAAEE,WAAW,EAAE;QAAa,CAAC,EAC7B,CACEF,EAAE,CACA,WAAW,EACX;UACEG,KAAK,EAAE;YAAEW,WAAW,EAAE;UAAG,CAAC;UAC1BC,EAAE,EAAE;YAAEC,KAAK,EAAEjB,GAAG,CAACkB;UAAmB;QACtC,CAAC,EACD,CAAClB,GAAG,CAACU,EAAE,CAAC,6BAA6B,CAAC,CACxC,CAAC,EACDT,EAAE,CACA,WAAW,EACX;UACEG,KAAK,EAAE;YAAEe,IAAI,EAAE,EAAE;YAAEJ,WAAW,EAAE;UAAG,CAAC;UACpCC,EAAE,EAAE;YACFC,KAAK,EAAE,SAAAA,CAAUG,MAAM,EAAE;cACvBpB,GAAG,CAACqB,IAAI,GAAG,KAAK;YAClB;UACF;QACF,CAAC,EACD,CAACrB,GAAG,CAACU,EAAE,CAAC,UAAU,CAAC,CACrB,CAAC,CACF,EACD,CACF,CAAC,CACF;MACH,CAAC;MACDI,KAAK,EAAE;IACT,CAAC,CACF,CAAC;IACFQ,KAAK,EAAE;MACLC,KAAK,EAAEvB,GAAG,CAACqB,IAAI;MACfG,QAAQ,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACvBzB,GAAG,CAACqB,IAAI,GAAGI,GAAG;MAChB,CAAC;MACDC,UAAU,EAAE;IACd;EACF,CAAC,EACD,CACEzB,EAAE,CAAC,KAAK,EAAE;IAAEE,WAAW,EAAE;EAAc,CAAC,EAAE,CACxCF,EAAE,CAAC,GAAG,EAAE,CAACD,GAAG,CAACU,EAAE,CAAC,GAAG,GAAGV,GAAG,CAACW,EAAE,CAACX,GAAG,CAACY,WAAW,CAACe,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAC5D,CAAC,CAEN,CAAC,CACF,EACD,CACF,CAAC;AACH,CAAC;AACD,IAAIC,eAAe,GAAG,EAAE;AACxB7B,MAAM,CAAC8B,aAAa,GAAG,IAAI;AAE3B,SAAS9B,MAAM,EAAE6B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}