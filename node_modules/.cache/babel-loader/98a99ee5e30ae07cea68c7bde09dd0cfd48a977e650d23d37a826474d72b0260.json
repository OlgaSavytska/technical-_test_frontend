{"ast":null,"code":"// import 'boxicons'\nexport default {\n  name: \"VsCheckboxContainer\",\n  props: {\n    answers: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      answerResult: [],\n      result: 0\n    };\n  },\n  mounted() {\n    this.answerResult = [...this.answers];\n  },\n  watch: {\n    // answerResult(val){\n    //     console.log(\"P\", val)\n\n    //     deep: true\n    // }\n\n    answerResult: {\n      handler(val) {\n        // do stuff\n        console.log(\"PPP\", val);\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["name","props","answers","type","Array","default","data","answerResult","result","mounted","watch","handler","val","console","log","deep"],"sources":["src/components/QuizPageComponents/VsCheckboxContainer.vue"],"sourcesContent":["<template>\n    <div class=\"vs-checkbox-container\">\n        <vs-radio dark v-for=\"(answer, index) in answerResult\" :key=\"index\" :val=\"index\" v-model=\"result\">\n            <template #icon>\n                <i class='bx bx-check' ></i>\n                <box-icon name=\"check\" color=\"white\"></box-icon>\n            </template>\n            {{ answer.name }} p {{ index }}\n        </vs-radio>\n\n        <!-- <vs-radio dark val=\"1\" v-model=\"answerResult.isChecked\">\n            <template #icon>\n                <i class='bx bx-check' ></i>\n                <box-icon name=\"check\" color=\"white\"></box-icon>\n            </template>\n            {{ answerResult.name }}\n        </vs-radio> -->\n\n        <vs-radio v-model=\"picked\" val=\"1\">\n          Option A\n        </vs-radio>\n        <vs-radio v-model=\"picked\" val=\"2\">\n          Option B\n        </vs-radio>\n        <vs-radio disabled v-model=\"picked\" val=\"3\">\n          Option C\n        </vs-radio>\n        <vs-radio v-model=\"picked\" val=\"4\">\n          Option D\n        </vs-radio>\n    </div>\n</template>\n\n<script>\n// import 'boxicons'\nexport default{\n    name: \"VsCheckboxContainer\",\n\n    props: {\n        answers: {\n            type: Array,\n            default: () => []\n        }\n    },\n\n    data(){\n        return{\n            answerResult: [],\n            result: 0\n        }\n    },\n\n    mounted(){\n        this.answerResult = [...this.answers]\n    },\n\n    watch:{\n        // answerResult(val){\n        //     console.log(\"P\", val)\n\n        //     deep: true\n        // }\n\n        answerResult: {\n            handler(val){\n            // do stuff\n                console.log(\"PPP\", val)\n            },\n            deep: true\n  }\n    }\n}\n</script>\n\n<style>\n    .vs-checkbox .vs-icon-check span .line1 {\n        width: 5px !important;\n    }\n</style>"],"mappings":"AAkCA;AACA;EACAA,IAAA;EAEAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EAEAC,KAAA;IACA;MACAC,YAAA;MACAC,MAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAF,YAAA,YAAAL,OAAA;EACA;EAEAQ,KAAA;IACA;IACA;;IAEA;IACA;;IAEAH,YAAA;MACAI,QAAAC,GAAA;QACA;QACAC,OAAA,CAAAC,GAAA,QAAAF,GAAA;MACA;MACAG,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}