{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport QuizRadioContainer from './QuizRadioContainer.vue';\nimport OriginQuestions from '../../questions.js';\nimport QuizModal from \"../../components/QuizPageComponents/Modal/QuizModal\";\nimport textForModal from \"../../textForModal\";\nexport default {\n  name: \"QuizBody\",\n  components: {\n    QuizRadioContainer,\n    QuizModal\n  },\n  data() {\n    return {\n      questions: [],\n      questionsList: [],\n      isActive: true,\n      activeModal: false,\n      openModal: false,\n      procentOfResult: 0,\n      description: {},\n      showCorrectResult: false\n    };\n  },\n  mounted() {\n    this.questions = OriginQuestions;\n  },\n  methods: {\n    compareAnswers(val) {\n      this.questions[val.id].isTrue = val.isTrue;\n      if (this.questionsList.indexOf(val.id) === -1) {\n        this.questionsList.push(val.id);\n      }\n      this.isActive = this.questionsList.length <= 2;\n      this.procentOfResult = this.questions.filter(el => el.isTrue).length;\n    },\n    checkAnswers() {\n      this.openModal = true;\n      this.description = textForModal[this.procentOfResult];\n      setTimeout(() => {\n        this.openModal = false;\n      }, 0);\n    },\n    showResult() {\n      console.log(\"SHIW\");\n      this.showCorrectResult = true;\n    }\n\n    // mouseControll(e){\n    //     this.xAxis = (window.innerWidth / 2 - e.pageX) / 40;\n    //     this.yAxis = (window.innerHeight / 2 - e.pageY) / 40;\n    //     console.log(\"Pdddd\", this.xAxis, this.yAxis)\n    //     // document.querySelector('.parallax-container').style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n    // }\n  }\n};","map":{"version":3,"names":["QuizRadioContainer","OriginQuestions","QuizModal","textForModal","name","components","data","questions","questionsList","isActive","activeModal","openModal","procentOfResult","description","showCorrectResult","mounted","methods","compareAnswers","val","id","isTrue","indexOf","push","length","filter","el","checkAnswers","setTimeout","showResult","console","log"],"sources":["src/components/QuizPageComponents/QuizBody.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-body\">\n        <div class=\"quiz-body__carts\">\n            <div class=\"quiz-body__cart\" v-for=\"question in questions\" :key=\"question.id\">\n                <div class=\"title-cart\">{{ question.title }}</div>\n\n                <div class=\"quiz-body__answers\">\n                    <QuizRadioContainer \n                        :answers=\"question\" \n                        :show-answers=\"showCorrectResult\"\n                        @result=\"compareAnswers\"\n                    />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"quiz-body__btn\">\n            <vs-button\n                dark\n                flat\n                size=\"xl\"\n                :disabled=\"isActive\"\n                @click=\"checkAnswers\"\n            >\n                Done\n            </vs-button>\n        </div>\n\n        <QuizModal \n            :open-modal=\"openModal\" \n            :description=\"description\"\n            @show_result=\"showResult\"\n        />\n    </div>\n</template>\n\n<script>\nimport QuizRadioContainer from './QuizRadioContainer.vue'\nimport OriginQuestions from '../../questions.js'\nimport QuizModal from \"../../components/QuizPageComponents/Modal/QuizModal\"\nimport textForModal from \"../../textForModal\"\n\nexport default{\n    name: \"QuizBody\",\n\n    components: {\n        QuizRadioContainer,\n        QuizModal\n    },\n\n    data() {\n        return {\n            questions: [],\n            questionsList: [],\n            isActive: true,\n            activeModal: false,\n            openModal: false,\n            procentOfResult: 0,\n            description: {},\n            showCorrectResult: false\n        }\n    },\n\n    mounted(){\n        this.questions = OriginQuestions\n    },\n\n    methods: {\n        compareAnswers(val){ \n            this.questions[val.id].isTrue = val.isTrue \n\n            if (this.questionsList.indexOf(val.id) === -1){\n                this.questionsList.push(val.id)\n            }\n            \n            this.isActive = this.questionsList.length <= 2\n            this.procentOfResult = this.questions.filter(el => el.isTrue).length\n        },\n\n        checkAnswers(){\n            this.openModal = true\n            this.description = textForModal[this.procentOfResult]\n\n            setTimeout(() => {\n                this.openModal = false\n            }, 0)\n        },\n\n        showResult(){\n            console.log(\"SHIW\")\n            this.showCorrectResult = true\n        }\n\n        // mouseControll(e){\n        //     this.xAxis = (window.innerWidth / 2 - e.pageX) / 40;\n        //     this.yAxis = (window.innerHeight / 2 - e.pageY) / 40;\n        //     console.log(\"Pdddd\", this.xAxis, this.yAxis)\n        //     // document.querySelector('.parallax-container').style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n        // }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n    .title-cart{\n        font-family: revert-layer;\n        font-size: 30px;\n        margin-bottom: 20px;\n    }\n\n    .image{\n        height: 300px;\n        border: 1px red solid;\n        overflow: hidden;\n        perspective: 1000px; \n        background-color: #03031e;\n        position: relative;\n\n        .forest{\n            background: url('https://raw.githubusercontent.com/Ryoley/moonlight-parallax/main/assets/images/stars.png');\n            background-size: cover;\n            height: 100%;\n\n            \n        }\n\n        .forest-light{\n            background: url('https://raw.githubusercontent.com/Ryoley/moonlight-parallax/main/assets/images/moon.png');\n            background-size: cover;\n            height: 100%;\n\n            z-index: 10;\n            position: absolute;\n        }\n\n        .forest-middle{\n            background: url('https://raw.githubusercontent.com/Ryoley/moonlight-parallax/main/assets/images/mountains_back.png');\n            background-size: cover;\n            height: 100%;\n        }\n\n        .forest-first{\n            background: url('https://raw.githubusercontent.com/Ryoley/moonlight-parallax/main/assets/images/mountains_front.png');\n            background-size: cover;\n            height: 100%;\n        }\n\n        .forest,\n        .forest-light,\n        .forest-middle,\n        .forest-first {\n            width: 100%;\n            height: 100%;\n            background-size: cover;\n            background-repeat: no-repeat;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n\n        &:hover{\n            .forest,\n            .forest-light,\n            .forest-middle,\n            .forest-first {\n                transform: translate(-50%, -50%) scale(1.2);\n            }\n        }\n    }\n\n    .quiz-body{\n        &__cart{\n            margin-bottom: 30px;\n        }\n\n        &__btn{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n</style>"],"mappings":";AAqCA,OAAAA,kBAAA;AACA,OAAAC,eAAA;AACA,OAAAC,SAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACAL,kBAAA;IACAE;EACA;EAEAI,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,QAAA;MACAC,WAAA;MACAC,SAAA;MACAC,eAAA;MACAC,WAAA;MACAC,iBAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAR,SAAA,GAAAN,eAAA;EACA;EAEAe,OAAA;IACAC,eAAAC,GAAA;MACA,KAAAX,SAAA,CAAAW,GAAA,CAAAC,EAAA,EAAAC,MAAA,GAAAF,GAAA,CAAAE,MAAA;MAEA,SAAAZ,aAAA,CAAAa,OAAA,CAAAH,GAAA,CAAAC,EAAA;QACA,KAAAX,aAAA,CAAAc,IAAA,CAAAJ,GAAA,CAAAC,EAAA;MACA;MAEA,KAAAV,QAAA,QAAAD,aAAA,CAAAe,MAAA;MACA,KAAAX,eAAA,QAAAL,SAAA,CAAAiB,MAAA,CAAAC,EAAA,IAAAA,EAAA,CAAAL,MAAA,EAAAG,MAAA;IACA;IAEAG,aAAA;MACA,KAAAf,SAAA;MACA,KAAAE,WAAA,GAAAV,YAAA,MAAAS,eAAA;MAEAe,UAAA;QACA,KAAAhB,SAAA;MACA;IACA;IAEAiB,WAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAhB,iBAAA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}