{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar wordWrap = require('word-wrapper');\nvar xtend = require('xtend');\nvar number = require('as-number');\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z'];\nvar M_WIDTHS = ['m', 'w'];\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nvar TAB_ID = '\\t'.charCodeAt(0);\nvar SPACE_ID = ' '.charCodeAt(0);\nvar ALIGN_LEFT = 0,\n  ALIGN_CENTER = 1,\n  ALIGN_RIGHT = 2;\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt);\n};\nfunction TextLayout(opt) {\n  this.glyphs = [];\n  this._measure = this.computeMetrics.bind(this);\n  this.update(opt);\n}\nTextLayout.prototype.update = function (opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt);\n  this._opt = opt;\n  this._opt.tabSize = number(this._opt.tabSize, 4);\n  if (!opt.font) throw new Error('must provide a valid bitmap font');\n  var glyphs = this.glyphs;\n  var text = opt.text || '';\n  var font = opt.font;\n  this._setupSpaceGlyphs(font);\n  var lines = wordWrap.lines(text, opt);\n  var minWidth = opt.width || 0;\n\n  //clear glyphs\n  glyphs.length = 0;\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function (prev, line) {\n    return Math.max(prev, line.width, minWidth);\n  }, 0);\n\n  //the pen position\n  var x = 0;\n  var y = 0;\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight);\n  var baseline = font.common.base;\n  var descender = lineHeight - baseline;\n  var letterSpacing = opt.letterSpacing || 0;\n  var height = lineHeight * lines.length - descender;\n  var align = getAlignType(this._opt.align);\n\n  //draw text along baseline\n  y -= height;\n\n  //the metrics for this text layout\n  this._width = maxLineWidth;\n  this._height = height;\n  this._descender = lineHeight - baseline;\n  this._baseline = baseline;\n  this._xHeight = getXHeight(font);\n  this._capHeight = getCapHeight(font);\n  this._lineHeight = lineHeight;\n  this._ascender = lineHeight - descender - this._xHeight;\n\n  //layout each glyph\n  var self = this;\n  lines.forEach(function (line, lineIndex) {\n    var start = line.start;\n    var end = line.end;\n    var lineWidth = line.width;\n    var lastGlyph;\n\n    //for each glyph in that line...\n    for (var i = start; i < end; i++) {\n      var id = text.charCodeAt(i);\n      var glyph = self.getGlyph(font, id);\n      if (glyph) {\n        if (lastGlyph) x += getKerning(font, lastGlyph.id, glyph.id);\n        var tx = x;\n        if (align === ALIGN_CENTER) tx += (maxLineWidth - lineWidth) / 2;else if (align === ALIGN_RIGHT) tx += maxLineWidth - lineWidth;\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        });\n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing;\n        lastGlyph = glyph;\n      }\n    }\n\n    //next line down\n    y += lineHeight;\n    x = 0;\n  });\n  this._linesTotal = lines.length;\n};\nTextLayout.prototype._setupSpaceGlyphs = function (font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null;\n  this._fallbackTabGlyph = null;\n  if (!font.chars || font.chars.length === 0) return;\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) || getMGlyph(font) || font.chars[0];\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance;\n  this._fallbackSpaceGlyph = space;\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0,\n    y: 0,\n    xadvance: tabWidth,\n    id: TAB_ID,\n    xoffset: 0,\n    yoffset: 0,\n    width: 0,\n    height: 0\n  });\n};\nTextLayout.prototype.getGlyph = function (font, id) {\n  var glyph = getGlyphById(font, id);\n  if (glyph) return glyph;else if (id === TAB_ID) return this._fallbackTabGlyph;else if (id === SPACE_ID) return this._fallbackSpaceGlyph;\n  return null;\n};\nTextLayout.prototype.computeMetrics = function (text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0;\n  var font = this._opt.font;\n  var curPen = 0;\n  var curWidth = 0;\n  var count = 0;\n  var glyph;\n  var lastGlyph;\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    };\n  }\n  end = Math.min(text.length, end);\n  for (var i = start; i < end; i++) {\n    var id = text.charCodeAt(i);\n    var glyph = this.getGlyph(font, id);\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset;\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0;\n      curPen += kern;\n      var nextPen = curPen + glyph.xadvance + letterSpacing;\n      var nextWidth = curPen + glyph.width;\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width) break;\n\n      //otherwise continue along our line\n      curPen = nextPen;\n      curWidth = nextWidth;\n      lastGlyph = glyph;\n    }\n    count++;\n  }\n\n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph) curWidth += lastGlyph.xoffset;\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  };\n}\n\n//getters for the private vars\n;\n['width', 'height', 'descender', 'ascender', 'xHeight', 'baseline', 'capHeight', 'lineHeight'].forEach(addGetter);\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  });\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return new Function(['return function ' + name + '() {', '  return this._' + name, '}'].join('\\n'))();\n}\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0) return null;\n  var glyphIdx = findChar(font.chars, id);\n  if (glyphIdx >= 0) return font.chars[glyphIdx];\n  return null;\n}\nfunction getXHeight(font) {\n  for (var i = 0; i < X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0);\n    var idx = findChar(font.chars, id);\n    if (idx >= 0) return font.chars[idx].height;\n  }\n  return 0;\n}\nfunction getMGlyph(font) {\n  for (var i = 0; i < M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0);\n    var idx = findChar(font.chars, id);\n    if (idx >= 0) return font.chars[idx];\n  }\n  return 0;\n}\nfunction getCapHeight(font) {\n  for (var i = 0; i < CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0);\n    var idx = findChar(font.chars, id);\n    if (idx >= 0) return font.chars[idx].height;\n  }\n  return 0;\n}\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0) return 0;\n  var table = font.kernings;\n  for (var i = 0; i < table.length; i++) {\n    var kern = table[i];\n    if (kern.first === left && kern.second === right) return kern.amount;\n  }\n  return 0;\n}\nfunction getAlignType(align) {\n  if (align === 'center') return ALIGN_CENTER;else if (align === 'right') return ALIGN_RIGHT;\n  return ALIGN_LEFT;\n}\nfunction findChar(array, value, start) {\n  start = start || 0;\n  for (var i = start; i < array.length; i++) {\n    if (array[i].id === value) {\n      return i;\n    }\n  }\n  return -1;\n}","map":{"version":3,"names":["wordWrap","require","xtend","number","X_HEIGHTS","M_WIDTHS","CAP_HEIGHTS","TAB_ID","charCodeAt","SPACE_ID","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","module","exports","createLayout","opt","TextLayout","glyphs","_measure","computeMetrics","bind","update","prototype","measure","_opt","tabSize","font","Error","text","_setupSpaceGlyphs","lines","minWidth","width","length","maxLineWidth","reduce","prev","line","Math","max","x","y","lineHeight","common","baseline","base","descender","letterSpacing","height","align","getAlignType","_width","_height","_descender","_baseline","_xHeight","getXHeight","_capHeight","getCapHeight","_lineHeight","_ascender","self","forEach","lineIndex","start","end","lineWidth","lastGlyph","i","id","glyph","getGlyph","getKerning","tx","push","position","data","index","xadvance","_linesTotal","_fallbackSpaceGlyph","_fallbackTabGlyph","chars","space","getGlyphById","getMGlyph","tabWidth","xoffset","yoffset","curPen","curWidth","count","min","xoff","kern","nextPen","nextWidth","addGetter","name","Object","defineProperty","get","wrapper","configurable","Function","join","glyphIdx","findChar","idx","left","right","kernings","table","first","second","amount","array","value"],"sources":["/Users/olga/Desktop/parallaxTest/node_modules/layout-bmfont-text/index.js"],"sourcesContent":["var wordWrap = require('word-wrapper')\nvar xtend = require('xtend')\nvar number = require('as-number')\n\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\nvar M_WIDTHS = ['m', 'w']\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\n\nvar TAB_ID = '\\t'.charCodeAt(0)\nvar SPACE_ID = ' '.charCodeAt(0)\nvar ALIGN_LEFT = 0, \n    ALIGN_CENTER = 1, \n    ALIGN_RIGHT = 2\n\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt)\n}\n\nfunction TextLayout(opt) {\n  this.glyphs = []\n  this._measure = this.computeMetrics.bind(this)\n  this.update(opt)\n}\n\nTextLayout.prototype.update = function(opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt)\n  this._opt = opt\n  this._opt.tabSize = number(this._opt.tabSize, 4)\n\n  if (!opt.font)\n    throw new Error('must provide a valid bitmap font')\n\n  var glyphs = this.glyphs\n  var text = opt.text||'' \n  var font = opt.font\n  this._setupSpaceGlyphs(font)\n  \n  var lines = wordWrap.lines(text, opt)\n  var minWidth = opt.width || 0\n\n  //clear glyphs\n  glyphs.length = 0\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function(prev, line) {\n    return Math.max(prev, line.width, minWidth)\n  }, 0)\n\n  //the pen position\n  var x = 0\n  var y = 0\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n  var baseline = font.common.base\n  var descender = lineHeight-baseline\n  var letterSpacing = opt.letterSpacing || 0\n  var height = lineHeight * lines.length - descender\n  var align = getAlignType(this._opt.align)\n\n  //draw text along baseline\n  y -= height\n  \n  //the metrics for this text layout\n  this._width = maxLineWidth\n  this._height = height\n  this._descender = lineHeight - baseline\n  this._baseline = baseline\n  this._xHeight = getXHeight(font)\n  this._capHeight = getCapHeight(font)\n  this._lineHeight = lineHeight\n  this._ascender = lineHeight - descender - this._xHeight\n    \n  //layout each glyph\n  var self = this\n  lines.forEach(function(line, lineIndex) {\n    var start = line.start\n    var end = line.end\n    var lineWidth = line.width\n    var lastGlyph\n    \n    //for each glyph in that line...\n    for (var i=start; i<end; i++) {\n      var id = text.charCodeAt(i)\n      var glyph = self.getGlyph(font, id)\n      if (glyph) {\n        if (lastGlyph) \n          x += getKerning(font, lastGlyph.id, glyph.id)\n\n        var tx = x\n        if (align === ALIGN_CENTER) \n          tx += (maxLineWidth-lineWidth)/2\n        else if (align === ALIGN_RIGHT)\n          tx += (maxLineWidth-lineWidth)\n\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        })  \n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing\n        lastGlyph = glyph\n      }\n    }\n\n    //next line down\n    y += lineHeight\n    x = 0\n  })\n  this._linesTotal = lines.length;\n}\n\nTextLayout.prototype._setupSpaceGlyphs = function(font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null\n  this._fallbackTabGlyph = null\n\n  if (!font.chars || font.chars.length === 0)\n    return\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) \n          || getMGlyph(font) \n          || font.chars[0]\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance\n  this._fallbackSpaceGlyph = space\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n    xoffset: 0, yoffset: 0, width: 0, height: 0\n  })\n}\n\nTextLayout.prototype.getGlyph = function(font, id) {\n  var glyph = getGlyphById(font, id)\n  if (glyph)\n    return glyph\n  else if (id === TAB_ID) \n    return this._fallbackTabGlyph\n  else if (id === SPACE_ID) \n    return this._fallbackSpaceGlyph\n  return null\n}\n\nTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0\n  var font = this._opt.font\n  var curPen = 0\n  var curWidth = 0\n  var count = 0\n  var glyph\n  var lastGlyph\n\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    }\n  }\n\n  end = Math.min(text.length, end)\n  for (var i=start; i < end; i++) {\n    var id = text.charCodeAt(i)\n    var glyph = this.getGlyph(font, id)\n\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n      curPen += kern\n\n      var nextPen = curPen + glyph.xadvance + letterSpacing\n      var nextWidth = curPen + glyph.width\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width)\n        break\n\n      //otherwise continue along our line\n      curPen = nextPen\n      curWidth = nextWidth\n      lastGlyph = glyph\n    }\n    count++\n  }\n  \n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph)\n    curWidth += lastGlyph.xoffset\n\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  }\n}\n\n//getters for the private vars\n;['width', 'height', \n  'descender', 'ascender',\n  'xHeight', 'baseline',\n  'capHeight',\n  'lineHeight' ].forEach(addGetter)\n\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  })\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return (new Function([\n    'return function '+name+'() {',\n    '  return this._'+name,\n    '}'\n  ].join('\\n')))()\n}\n\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0)\n    return null\n\n  var glyphIdx = findChar(font.chars, id)\n  if (glyphIdx >= 0)\n    return font.chars[glyphIdx]\n  return null\n}\n\nfunction getXHeight(font) {\n  for (var i=0; i<X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getMGlyph(font) {\n  for (var i=0; i<M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx]\n  }\n  return 0\n}\n\nfunction getCapHeight(font) {\n  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0)\n    return 0\n\n  var table = font.kernings\n  for (var i=0; i<table.length; i++) {\n    var kern = table[i]\n    if (kern.first === left && kern.second === right)\n      return kern.amount\n  }\n  return 0\n}\n\nfunction getAlignType(align) {\n  if (align === 'center')\n    return ALIGN_CENTER\n  else if (align === 'right')\n    return ALIGN_RIGHT\n  return ALIGN_LEFT\n}\n\nfunction findChar (array, value, start) {\n  start = start || 0\n  for (var i = start; i < array.length; i++) {\n    if (array[i].id === value) {\n      return i\n    }\n  }\n  return -1\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}