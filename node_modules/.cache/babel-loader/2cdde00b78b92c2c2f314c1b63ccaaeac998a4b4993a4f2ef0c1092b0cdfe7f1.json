{"ast":null,"code":"// import BondRound from '../assets/svgVue/BondRound.vue'\n// import StartWave from '../assets/svgVue/StartWave.vue'\n// import QuizBoat from '../assets/svgVue/QuizBoat.vue'\n// import QuizOctopus from \"../assets/svgVue/QuizOctopus.vue\"\nimport GeometryScene from './QuizPageComponents/GeometryScene.vue';\nimport QuizPage from './QuizPageComponents/QuizPage.vue';\nexport default {\n  name: \"StartPage\",\n  components: {\n    // BondRound,\n    // QuizBoat,\n    // StartWave,\n    // QuizOctopus\n    QuizPage,\n    GeometryScene\n  },\n  data() {\n    return {\n      openMainCard: false,\n      pageParams: null\n    };\n  },\n  // mounted(){\n  //     this.scene = new THREE.Scene();\n  // this.camera = new THREE.PerspectiveCamera(75, this.$el.offsetWidth / this.$el.offsetHeight, 0.1, 1000);\n  // this.renderer = new THREE.WebGLRenderer();\n  // this.renderer.setSize(this.$el.offsetWidth, this.$el.offsetHeight);\n  // this.$refs.scene.appendChild(this.renderer.domElement);\n\n  // // Створення квадратів\n  // const squareCount = 100;\n  // for (let i = 0; i < squareCount; i++) {\n  //   const size = Math.random() * 2 + 1;\n  //   const geometry = new THREE.BoxGeometry(size, size, size);\n  //   const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(Math.random(), Math.random(), Math.random()) });\n  //   const square = new THREE.Mesh(geometry, material);\n  //   square.position.set(\n  //     (Math.random() - 0.5) * 20,\n  //     Math.random() * 10,\n  //     (Math.random() - 0.5) * 20\n  //   );\n  //   this.squares.push(square);\n  //   this.scene.add(square);\n  // }\n\n  // // Камера\n  // this.camera.position.z = 5;\n\n  // // Оновлення кадру\n  // const animate = () => {\n  //   requestAnimationFrame(animate);\n\n  //   // Рух квадратів вниз\n  //   this.squares.forEach(square => {\n  //     square.position.y -= 0.01;\n  //     if (square.position.y < -5) {\n  //       square.position.y = 10;\n  //     }\n  //   });\n\n  //   this.renderer.render(this.scene, this.camera);\n  // };\n\n  // // Обробник зміни розміру вікна\n  // window.addEventListener('resize', () => {\n  //   this.camera.aspect = this.$el.offsetWidth / this.$el.offsetHeight;\n  //   this.camera.updateProjectionMatrix();\n  //   this.renderer.setSize(this.$el.offsetWidth, this.$el.offsetHeight);\n  // });\n\n  // // Запуск анімації\n  // animate();\n\n  // },\n\n  // methods:{\n  //     startQuiz(){\n  //         this.openQuiz = true\n  //     }\n  // }\n\n  mounted() {\n    this.pageParams = this.$refs.page.$el.getBoundingClientRect().height / 2;\n    setTimeout(() => {\n      this.openMainCard = true;\n    }, 1000);\n  }\n};","map":{"version":3,"names":["GeometryScene","QuizPage","name","components","data","openMainCard","pageParams","mounted","$refs","page","$el","getBoundingClientRect","height","setTimeout"],"sources":["src/components/StartPage.vue"],"sourcesContent":["<template>\n    <div>\n        <v-expand-transition>\n            <div class=\"start-page__header-top\" v-if=\"openMainCard\">\n                It's a Quiz Time!\n            </div>\n        </v-expand-transition>\n\n        <QuizPage ref=\"page\"/>\n\n        <GeometryScene :page-params=\"pageParams\"/>\n    </div>\n</template>\n\n<script>\n// import BondRound from '../assets/svgVue/BondRound.vue'\n// import StartWave from '../assets/svgVue/StartWave.vue'\n// import QuizBoat from '../assets/svgVue/QuizBoat.vue'\n// import QuizOctopus from \"../assets/svgVue/QuizOctopus.vue\"\nimport GeometryScene from './QuizPageComponents/GeometryScene.vue'\nimport QuizPage from './QuizPageComponents/QuizPage.vue'\n\nexport default{\n    name: \"StartPage\",\n\n    components: {\n        // BondRound,\n        // QuizBoat,\n        // StartWave,\n        // QuizOctopus\n        QuizPage,\n        GeometryScene\n    },\n\n    data(){\n        return{\n\n            openMainCard: false,\n            pageParams: null\n        }\n    },\n\n    // mounted(){\n    //     this.scene = new THREE.Scene();\n    // this.camera = new THREE.PerspectiveCamera(75, this.$el.offsetWidth / this.$el.offsetHeight, 0.1, 1000);\n    // this.renderer = new THREE.WebGLRenderer();\n    // this.renderer.setSize(this.$el.offsetWidth, this.$el.offsetHeight);\n    // this.$refs.scene.appendChild(this.renderer.domElement);\n\n    // // Створення квадратів\n    // const squareCount = 100;\n    // for (let i = 0; i < squareCount; i++) {\n    //   const size = Math.random() * 2 + 1;\n    //   const geometry = new THREE.BoxGeometry(size, size, size);\n    //   const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(Math.random(), Math.random(), Math.random()) });\n    //   const square = new THREE.Mesh(geometry, material);\n    //   square.position.set(\n    //     (Math.random() - 0.5) * 20,\n    //     Math.random() * 10,\n    //     (Math.random() - 0.5) * 20\n    //   );\n    //   this.squares.push(square);\n    //   this.scene.add(square);\n    // }\n\n    // // Камера\n    // this.camera.position.z = 5;\n\n    // // Оновлення кадру\n    // const animate = () => {\n    //   requestAnimationFrame(animate);\n\n    //   // Рух квадратів вниз\n    //   this.squares.forEach(square => {\n    //     square.position.y -= 0.01;\n    //     if (square.position.y < -5) {\n    //       square.position.y = 10;\n    //     }\n    //   });\n\n    //   this.renderer.render(this.scene, this.camera);\n    // };\n\n    // // Обробник зміни розміру вікна\n    // window.addEventListener('resize', () => {\n    //   this.camera.aspect = this.$el.offsetWidth / this.$el.offsetHeight;\n    //   this.camera.updateProjectionMatrix();\n    //   this.renderer.setSize(this.$el.offsetWidth, this.$el.offsetHeight);\n    // });\n\n    // // Запуск анімації\n    // animate();\n\n    // },\n\n    // methods:{\n    //     startQuiz(){\n    //         this.openQuiz = true\n    //     }\n    // }\n\n    mounted() {\n       \n    this.pageParams = this.$refs.page.$el.getBoundingClientRect().height / 2\n\n    setTimeout(() => {\n        this.openMainCard = true\n    }, 1000)\n  },\n\n    \n\n}\n</script>\n\n<style scoped lang=\"scss\">\n    .start-page{\n        &__header-top{\n            // background-image: url('../assets/png/cloudTop.png'); /* Замініть 'your-image.jpg' на шлях до вашого зображення */\n            // background-size: cover;\n            // background-attachment: fixed; /* Зафіксувати фон для ефекту паралакса */\n            // height: 100vh; /* Встановіть висоту відповідно до ваших потреб */\n            // position: relative;\n            // overflow: hidden;\n\n            // background-color: #47b0ca38;\n            // width: 100%;\n            // position: relative;\n            // height: 500px;\n            // z-index: -1;\n            // display: none;\n\n            position: fixed;\n            background-color: white;\n            width: 100%;\n            top: 0px;\n            left: 0px;\n            font-family: revert-layer;\n            font-size: 60px;\n            \n        }\n\n        &__btn{\n            width: 100%;\n            max-width: 300px;\n\n            border-radius: 50%;\n            background-color: transparent;\n            border-color: transparent;\n\n            transition: transform 0.5s ease;\n\n            &-container{\n                width: 100%;\n                max-width: 300px;\n\n                &:hover{\n                    .start-page__btn{\n                        transform: rotate(25deg) scale(1.2);\n                    }\n                }\n\n                &.start-quiz{\n                    transition: transform 10s ease;\n                    transform: rotate(105deg) scale(50);\n                }\n            }\n\n            // &:hover{\n            //     // max-width: 400px;\n                \n            //     // transform: rotate(25deg) scale(1.2);\n            // }\n\n            \n        }\n\n        &__round{\n            // position: relative;\n            width: 100%;\n\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            z-index: 1;\n\n            display: flex;\n            justify-content: center;\n            // color: #ffffff;\n\n            span{\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n\n                cursor: pointer;\n            }\n        }\n    }\n\n    .wave-container {\n        position: absolute;\n        // bottom: -220px;\n        // height: 100%;\n        width: 100%;\n        top: 500px;\n        \n\n        &:after{\n            content: \"\";\n            display: block;\n            margin: 0px;\n\n            width: 100%;\n            height: 7%;\n            background-color: #3498db;\n            position: absolute;\n            bottom: 0px;\n            z-index: 2;\n        }\n        // transform: rotate(-9deg);\n        // left: -2px;\n\n\n    //   position: absolute;\n    //   bottom: -150px;\n    //   height: 100%; /* 100% висота вікна браузера */\n    //   width: 100%;\n\n    //   overflow: hidden;\n    //   background-color: #3498db;\n    }\n\n    .wave {\n      position: absolute;\n      bottom: -6px;\n      width: 100%;\n      animation: animate 4s ease-in-out infinite;\n      animation-delay: calc(var(--i) * 0.55s);\n\n    .quiz-boat{\n        position: absolute;\n        bottom: 68px;\n        z-index: 7;\n    }\n\n    .quiz-octopus{\n        width: 100px;\n        position: absolute;\n        bottom: 122px;\n        z-index: 9;\n        left: 226px;\n    }\n\n        &#wave1{\n            z-index: 5;\n            opacity: 0.5;\n            background-position-x: 100px;\n            transform: rotate(-11deg);\n            // left: 40px;\n\n            \n        }\n\n        &#wave2{\n            z-index: 4;\n            opacity: 0.4;\n            background-position-x: 10px;\n            // transform: rotate(-11deg);\n            bottom: 30px;\n            // left: 40px;\n\n        }\n\n        &#wave3{\n            z-index: 3;\n            opacity: 0.3;\n            background-position-x: 100px;\n            transform: rotate(11deg);\n            bottom: 30px;\n            left: -40px;\n            width: 116%;\n        }\n\n        &#wave4{\n            z-index: 3;\n            opacity: 1.3;\n            background-position-x: 100px;\n        }\n    }\n\n    .vue-element {\n  position: absolute;\n  top: 50%; // Початкове положення по вертикалі\n  left: 50%; // Початкове положення по горизонталі\n  transform: translate(-50%, -50%); // Центрування\n  opacity: 0; // Початкова прозорість\n  text-align: center;\n  font-size: 20px;\n}\n\ncanvas{\n    width: 100vw;\n      height: 100vh;\n}\n\n    @keyframes animate {\n      0%, 100% {\n        transform: translateY(0);\n      }\n      50% {\n        transform: translateY(-10px);\n      }\n    }\n\n    @media(max-width: 707px){\n        .wave-container{\n            &:after{\n                // display: none;\n                height: 4%;\n            }\n        }\n\n        .wave{\n            &#wave3{\n                opacity: 0.4;\n                bottom: 9px;\n            }\n        }\n    }\n</style>"],"mappings":"AAeA;AACA;AACA;AACA;AACA,OAAAA,aAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACA;IACA;IACA;IACA;IACAF,QAAA;IACAD;EACA;EAEAI,KAAA;IACA;MAEAC,YAAA;MACAC,UAAA;IACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEAC,QAAA;IAEA,KAAAD,UAAA,QAAAE,KAAA,CAAAC,IAAA,CAAAC,GAAA,CAAAC,qBAAA,GAAAC,MAAA;IAEAC,UAAA;MACA,KAAAR,YAAA;IACA;EACA;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}